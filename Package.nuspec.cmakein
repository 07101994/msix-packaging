<?xml version="1.0"?>
<package >
  <metadata>
    <id>Microsoft.xPlat.AppxPackaging</id>
    <version>${VERSION}</version>
    <authors>psmith@microsoft.com</authors>
    <owners>Xplat-appX@service.microsoft.com</owners>
    <projectUrl>https://aka.ms/xPlatAppx</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>Cross platform implementation of AppxPackaging.dll</description>
    <releaseNotes>
0.6 -   Replace internal StramBase interface and semantics with an IStream implementation and semantics.
        This change also requires introducing a new C-style export CoCreateAppxFactoryWithHeap which is
        necessary as CoCreateAppxFactory was already exported with cdecl calling convention on Win32
        platforms, meaning that you cannot overload any such exported function.  Also as a convenience
        to non Win32 clients, CreateStreamOnFile is provided to enable easier consumption of the COM APIs.

0.7 -   API changes:
        * Implemented IAppxFactory's CreatePackageWriter, and CreatePackageReader methods.

        * Implemented IAppxPackageReader's GetPayloadFiles

        * Implemented IAppxFileEnumerator

        * Moved utf8/utf16 conversion functions into their own header to support marshalling
          out file Names and content types to clients through the nanoCOM layer.

        * Added CreateStreamOnFileUTF16 c-style export as it became clear that interoperating 
          with UTF16 file names in a cross-platform sane manner was onerous on cross platform 
          clients.

        * Added HRESULT_FROM_WIN32 and fixed a small bug in AppxWindows.hpp.

        * Updated sample to compile on multiple platforms to prove-out external consumption of
          the nanoCOM interfaces.  Also replace VS project and sln with CMakeLists.txt files and
          included that in the  larger CMake project.
    </releaseNotes>
    <copyright>Copyright (C) 2017 Microsoft</copyright>
    <tags>xPlatAppx Appx AppxPackaging</tags>
    <dependencies />
  </metadata>
</package>
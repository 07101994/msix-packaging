import "oaidl.idl";
import "ocidl.idl";

typedef [v1_enum] enum XPLATAPPX_VALIDATION_OPTION
{
    XPLATAPPX_VALIDATION_OPTION_FULL = 0x01,                // perform full validation
    XPLATAPPX_VALIDATION_OPTION_SKIPSIGNATUREORIGIN = 0x02, // turn-off signature origin validation (for side loading)
    XPLATAPPX_VALIDATION_OPTION_SKIPAPPXMANIFEST = 0x04,    // turn-off schema manifest validation
} XPLATAPPX_VALIDATION_OPTION;

typedef [v1_enum] enum XPLATAPPX_PACKUNPACK_OPTION
{
    XPLATAPPX_PACKUNPACK_OPTION_NONE = 0x0,
    XPLATAPPX_PACKUNPACK_OPTION_CREATEPACKAGESUBFOLDER = 0x1,
} XPLATAPPX_PACKUNPACK_OPTION;

cpp_quote("#if defined PLATFORM_APPLE")
cpp_quote("    #define XPLATAPPX_CONV")
cpp_quote("#elif defined PLATFORM_ANDROID")
cpp_quote("    #define XPLATAPPX_CONV")
cpp_quote("#elif defined PLATFORM_LINUX")
cpp_quote("    #define XPLATAPPX_CONV")
cpp_quote("#else // WIN32")
cpp_quote("    #define XPLATAPPX_CONV __stdcall")
cpp_quote("#endif")
cpp_quote("#ifdef __cplusplus")
cpp_quote("extern \"C\" ")
cpp_quote("{")
cpp_quote("#endif // __cplusplus")
cpp_quote("    HRESULT XPLATAPPX_CONV PackAppx(")
cpp_quote("        XPLATAPPX_PACKUNPACK_OPTION packUnpackOptions,")
cpp_quote("        XPLATAPPX_VALIDATION_OPTION validationOption,")
cpp_quote("        char* utf8FolderToPack,")
cpp_quote("        char* utf8CertificatePath,")
cpp_quote("        char* utf8Destination")
cpp_quote("    );")
cpp_quote("    HRESULT XPLATAPPX_CONV UnpackAppx(")
cpp_quote("        XPLATAPPX_PACKUNPACK_OPTION packUnpackOptions,")
cpp_quote("        XPLATAPPX_VALIDATION_OPTION validationOption,")
cpp_quote("        char* utf8TargetFolder,")
cpp_quote("        char* utf8Destination")
cpp_quote("    );")
cpp_quote("    typedef void* XPLATAPPX_CONV COTASKMEMALLOC(size_t cb);")
cpp_quote("    typedef void XPLATAPPX_CONV COTASKMEMFREE(void* pv);")
cpp_quote("    HRESULT XPLATAPPX_CONV XplatAppxInitialize(COTASKMEMALLOC* memalloc, COTASKMEMFREE* memfree);")
cpp_quote("#ifdef __cplusplus")
cpp_quote("}")
cpp_quote("#endif // __cplusplus")

typedef [v1_enum] enum XPLATAPPX_FOOTPRINT_FILE_TYPE
{
    XPLATAPPX_FOOTPRINT_FILE_TYPE_MANIFEST = 0,
    XPLATAPPX_FOOTPRINT_FILE_TYPE_BLOCKMAP = 1,
    XPLATAPPX_FOOTPRINT_FILE_TYPE_SIGNATURE = 2,
    XPLATAPPX_FOOTPRINT_FILE_TYPE_CODEINTEGRITY = 3,
    XPLATAPPX_FOOTPRINT_FILE_TYPE_CONTENTGROUPMAP = 4
} XPLATAPPX_FOOTPRINT_FILE_TYPE;

interface IXplatAppxPackage;
interface IXplatAppxFile;
interface IEnumXplatAppxFile;
interface IXplatAppxBlockMapReader;
interface IXplatAppxBlockMapFile;
interface IEnumXplatAppxBlockMapFile;
interface IXplatAppxBlockMapBlock;
interface IEnumXplatAppxBlockMapBlock;

[
    object,
    uuid(e0a98297-e0ed-4111-a0ee-dd2a461787b0),
    pointer_default(unique)
]
interface IXplatAppxFactory : IUnknown
{
    HRESULT CreatePackageFromFile(
        [in, string] LPWSTR fileName,
        [in] XPLATAPPX_VALIDATION_OPTION validationOption,
        [out] IXplatAppxPackage** packageReader
    );
}

[
    object,
    uuid(92a4fb80-65f3-4772-a4e3-99efa2ede6c9),
    pointer_default(unique)
]
interface IXplatAppxPackage : IUnknown
{
    HRESULT GetBlockMap(
        [out] IXplatAppxBlockMapReader** blockMapReader
    );

    HRESULT GetFootprintFile(
        [in] XPLATAPPX_FOOTPRINT_FILE_TYPE type,
        [out] IXplatAppxFile** file
    );

    HRESULT GetFile(
        [in, string] LPCWSTR fileName,
        [out] IXplatAppxFile** file
    );

    HRESULT GetFiles(
        [out] IEnumXplatAppxFile** files
    );
}

[
    object,
    uuid(abfaa51a-4fa2-4235-8f28-736a25060e95),
    pointer_default(unique)
]
interface IXplatAppxFile : IUnknown
{
    HRESULT GetContentType(
        [out, string] LPWSTR* contentType
    );

    HRESULT GetName(
        [out, string] LPWSTR* fileName
    );

    HRESULT GetSize(
        [out] UINT64* size
    );

    HRESULT GetStream(
        [out] IStream** stream
    );
}

[
    object,
    uuid(71631e46-7c85-4796-8fe3-62e16dde4342),
    pointer_default(unique)
]
interface IEnumXplatAppxFile : IUnknown
{
    HRESULT GetCurrent(
        [out] IXplatAppxFile** file
    );

    HRESULT GetHasCurrent(
        [out] boolean* hasCurrent
    );

    HRESULT MoveNext(
        [out] boolean* hasNext
    );
}

[
    object,
    uuid(efe725b7-e7cd-4211-ba61-1716996d0384),
    pointer_default(unique)
]
interface IXplatAppxBlockMapReader : IUnknown
{
    HRESULT GetFile(
        [in, string] LPCWSTR filename,
        [out] IXplatAppxBlockMapFile** file
    );

    HRESULT GetFiles(
        [out] IEnumXplatAppxBlockMapFile** files
    );

    HRESULT GetStream(
        [out] IStream** blockMapStream
    );
}

[
    object,
    uuid(276e949a-3517-4bcb-8037-a34f728b2485),
    pointer_default(unique)
]
interface IXplatAppxBlockMapFile : IUnknown
{
    HRESULT GetBlocks(
        [out] IEnumXplatAppxBlockMapBlock** blocks
    );

    HRESULT GetLocalFileHeaderSize(
        [out] UINT64* localFileHeaderSize
    );

    HRESULT GetName(
        [out, string] LPWSTR* name
    );

    HRESULT GetUncompressedSize(
        [out] UINT64* size
    );

    HRESULT ValidateFileHash(
        [in] IStream* fileStream,
        [out] boolean* isValid
    );
}

[
    object,
    uuid(7ffe86b2-5108-4e91-856f-9fbecc728944),
    pointer_default(unique)
]
interface IEnumXplatAppxBlockMapFile : IUnknown
{
    HRESULT GetCurrent(
        [out] IXplatAppxBlockMapFile** file
    );

    HRESULT GetHasCurrent(
        [out] boolean* hasCurrent
    );

    HRESULT MoveNext(
        [out] boolean* hasCurrent
    );
}

[
    object,
    uuid(a2f2da6d-12c8-42ba-9d95-1f6c3d60b22c),
    pointer_default(unique)
]
interface IXplatAppxBlockMapBlock : IUnknown
{
    HRESULT GetHash(
        [out] UINT32* bufferSize,
        [out, size_is(, *bufferSize)] byte** buffer
    );

    HRESULT GetCompressedSize(
        [out] UINT32* size
    );
}

[
    object,
    uuid(8a904b5e-b4fb-4e6d-a6b3-187064af7797),
    pointer_default(unique)
]
interface IEnumXplatAppxBlockMapBlock : IUnknown
{
    HRESULT GetCurrent(
        [out] IXplatAppxBlockMapBlock** block
    );

    HRESULT GetHasCurrent(
        [out] boolean* hasCurrent
    );

    HRESULT MoveNext(
        [out] boolean* hasNext
    );
}

[
    uuid(69ac7d72-95f2-4ecf-ba61-c7c74d1cc125),
    version(1.0),
    lcid(0x0000)
]
library XPLATAPPXPACKAGING {

    [
        uuid(025ffadb-133c-4b95-989a-fe77a3b0f18a)
    ]
    coclass XplatAppxFactory
    {
        interface IXplatAppxFactory;
    };

}; // library XPLATAPPXPACKAGING
